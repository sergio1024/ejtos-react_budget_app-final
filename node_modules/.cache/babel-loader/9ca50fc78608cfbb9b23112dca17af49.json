{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport Image, { propTypes as imagePropTypes } from './Image';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FigureImage = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    fluid = true,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsx(Image, {\n    ref: ref,\n    ...props,\n    fluid: fluid,\n    className: classNames(className, 'figure-img')\n  });\n});\nFigureImage.displayName = 'FigureImage';\nFigureImage.propTypes = imagePropTypes;\nexport default FigureImage;","map":{"version":3,"names":["classNames","React","Image","propTypes","imagePropTypes","jsx","_jsx","FigureImage","forwardRef","ref","className","fluid","props","displayName"],"sources":["C:/Users/Sergio/Downloads/ejtos-react_budget_app_final/node_modules/react-bootstrap/esm/FigureImage.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport Image, { propTypes as imagePropTypes } from './Image';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FigureImage = /*#__PURE__*/React.forwardRef(({\n  className,\n  fluid = true,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Image, {\n  ref: ref,\n  ...props,\n  fluid: fluid,\n  className: classNames(className, 'figure-img')\n}));\nFigureImage.displayName = 'FigureImage';\nFigureImage.propTypes = imagePropTypes;\nexport default FigureImage;"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAS,IAAIC,cAA7B,QAAmD,SAAnD;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,WAAW,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,OAI/CC,GAJ+C;EAAA,IAAC;IACjDC,SADiD;IAEjDC,KAAK,GAAG,IAFyC;IAGjD,GAAGC;EAH8C,CAAD;EAAA,OAIvC,aAAaN,IAAI,CAACJ,KAAD,EAAQ;IAClCO,GAAG,EAAEA,GAD6B;IAElC,GAAGG,KAF+B;IAGlCD,KAAK,EAAEA,KAH2B;IAIlCD,SAAS,EAAEV,UAAU,CAACU,SAAD,EAAY,YAAZ;EAJa,CAAR,CAJsB;AAAA,CAAjB,CAAjC;AAUAH,WAAW,CAACM,WAAZ,GAA0B,aAA1B;AACAN,WAAW,CAACJ,SAAZ,GAAwBC,cAAxB;AACA,eAAeG,WAAf"},"metadata":{},"sourceType":"module"}